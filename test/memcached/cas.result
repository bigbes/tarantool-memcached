cas bad blah 0 0 0
CLIENT_ERROR bad command line format
cas bad 0 blah 0 0
CLIENT_ERROR bad command line format
cas bad 0 0 blah 0
CLIENT_ERROR bad command line format
cas bad 0 0 0 blah
CLIENT_ERROR bad command line format
# gets foo (should not exist) 
gets foo
END
# set foo 
set foo 0 0 6
barval
STORED
# gets foo and verify identifier exists 
gets foo
VALUE foo 0 6 4
barval
END
# cas fail 
cas foo 0 0 6 123
barva2
EXISTS
# gets foo and verify identifier exists 
gets foo
# cas success 
cas foo 0 0 6 <unique_id>
barva2
STORED
# cas failure (reusing the same key) 
cas foo 0 0 6 <unique_id>
barva2
EXISTS
# delete foo 
delete foo
DELETED
# cas missing 
cas foo 0 0 6 <unique_id>
barva2
NOT_FOUND
# set foo1 
set foo1 0 0 1
1
STORED
# set foo2 
set foo2 0 0 1
2
STORED
# gets foo1 check 
gets foo1
VALUE foo1 0 1 9
1
END
# gets foo2 check 
gets foo2
VALUE foo2 0 1 10
2
END
# validate foo1 != foo2 
pass: foo1_cas != foo2_cas
# gets foo from memcached1 - should success 
# gets foo from memcached2 - should success 
# send 'cas foo1' from memcached1 
# send 'cas foo1' from memcached2 
# recv reply 'cas foo1' from memcached1 
# recv reply 'cas foo1' from memcached2 
race cas: pass
# set bug15 
set bug15 0 0 1
0
STORED
# Check out the first gets. 
# Increment. 
incr bug15 1
1
# Validate a changed CAS. 
# validate bug15_cas != next_bug15_cas 
pass: bug15_cas != next_bug15_cas
